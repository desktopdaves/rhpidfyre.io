@use './global';

$Header-Span-hover-time: .8s;

//Any formulas or tricks for getting the text length to width?
//calc(textLength + 1em)
//5/20/23
@mixin hover-span($data-name, $width: auto) {
	&:hover > span[data-head-span=#{$data-name}] { //Mixins may not contain mixin declarations.
		width: $width;
		//It's suppose to push the others on hover, I like it
		transition: width calc($Header-Span-hover-time / 2);
	}
}

@mixin topbar-header($active-button-selection) {
	header {
		@include global.flex-it(center, center);
		width: 100vw;
		height: 4rem;
		margin-top: 1em;

		span {
			display: block;
			background-color: black;
			width: 1em;
			height: 2px;
			transition: width $Header-Span-hover-time;
		}

		@media (prefers-color-scheme: dark) {
			span {
				background-color: white;
			}
		}

		a {
			@include global.flex-it(center, center, column);
			text-decoration: none;

			//Hax
			@if $active-button-selection == "Home" {
				button[data-head-button=#{$active-button-selection}] {
					font-weight: bold;
				}
				span[data-head-span=#{$active-button-selection}] {
					width: 6em;
				}
			} @else {
				//hi, I cant pass $active-button-selection as the first argument and concatenate -05/22/23
				@include hover-span("Home", 6em);
			}

			@if $active-button-selection == "Repositories" {
				button[data-head-button=#{$active-button-selection}] {
					font-weight: bold;
				}
				span[data-head-span=#{$active-button-selection}] {
					width: 12em;
				}
			} @else {
				@include hover-span("Repositories", 12em);
			}

			@if $active-button-selection == "Contact" {
				button[data-head-button=#{$active-button-selection}] {
					font-weight: bold;
				}
				span[data-head-span=#{$active-button-selection}] {
					width: 8em;
				}
			} @else {
				@include hover-span("Contact", 8em);
			}
		}

		button {
			font: {
				family: var(--Montserrat-font);
				size: 1.4em;
			};
			letter-spacing: 3px;
			background-color: transparent;
			padding: .4em 0 .4em 0;
		}

		> #header-buttons {
			@include global.flex-it(space-evenly);
			width: global.real-viewbox(70vw);
		}
	}
}